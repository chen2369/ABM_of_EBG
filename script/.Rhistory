} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
Hedge_Hedge <- lapply(1:2, FUN = Playgame, P1type = "Hedge", P2type = "Hedge")
market <- Market$new(100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
Market$trial
market$trial
Market$trial
source('class1.R', echo=TRUE)     # source
Playgame <- function(P1type, P2type){
market <- Market$new(100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
market$trial
Market$trial
Playgame("Hedge","Hedge")
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
market <- Market$new(100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
market <- Market$new(100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
source('class1.R', echo=TRUE)     # source
market <- Market$new(100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
source('class1.R', echo=TRUE)     # source
source('class1.R', echo=TRUE)     # source
Playgame <- function(P1type, P2type){
market <- market$new(100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
source('class1.R', echo=TRUE)     # source
source('class1.R', echo=TRUE)     # source
Playgame <- function(P1type, P2type){
market <- market$new(total=100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
Playgame <- function(P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
Playgame <- function(P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
source('class1.R', echo=TRUE)     # source
Playgame <- function(P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
source('class1.R', echo=TRUE)     # source
Playgame <- function(P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Playgame("Hedge","Hedge")
Playgame <- function(P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,P1type,100)   #P1
P2 <- Player$new(10000,10,P2type,100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Hedge_Hedge <- lapply(1:100, FUN = Playgame, P1type = "Hedge", P2type = "Hedge")
Playgame <- function(times, P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,P1type,100)   #P1
P2 <- Player$new(10000,10,P2type,100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Hedge_Hedge <- lapply(1:100, FUN = Playgame, P1type = "Hedge", P2type = "Hedge")
View(Hedge_Hedge)
Price <- sapply(Hedge_Hedge, "[[", 1)
Price
View(Price)
Price <- sapply(Hedge_Hedge, "[[", 1) %>%
data.frame() %>%
add_column(trial = 1:101) %>%
pivot_longer(-trial, names_to = "sim-times", values_to = "value")
Price
ggplot(aes(x = trial, y = value, group = sim_times)) +
geom_line()
Price <- sapply(Hedge_Hedge, "[[", 1) %>%
data.frame() %>%
add_column(trial = 1:101) %>%
pivot_longer(-trial, names_to = "sim-times", values_to = "value") %>%
ggplot(aes(x = trial, y = value, group = sim_times)) +
geom_line()
Price <- sapply(Hedge_Hedge, "[[", 1) %>%
data.frame() %>%
add_column(trial = 1:101) %>%
pivot_longer(-trial, names_to = "sim-times", values_to = "value")
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line()
ggplot(Price, aes(x = trial, y = value, group = "sim_times")) +
geom_line()
Price
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line()
Price <- sapply(Hedge_Hedge, "[[", 1) %>%
data.frame() %>%
add_column(trial = 1:101) %>%
pivot_longer(-trial, names_to = "sim_times", values_to = "value")
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line()
ggplot(Price, aes(x = trial, y = value, group = sim_times, col = sim_times)) +
geom_line()
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = "sim_times")
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = sim_times)
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = "grey")
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = "grey") +
theme_bw()
ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = "grey") +
theme_classic()
install.packages("plotly")
g <- ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = "grey") +
theme_classic()
library(plotly)
ggplotly(g)
setwd("./GitHub/ABM_of_EBG/script")
# setwd("./GitHub/ABM_of_EBG/script")
source('class1.R', echo=TRUE)
library(plotly)
Playgame <- function(times, P1type, P2type){
market <- Market$new(total=100)
P1 <- Player$new(10000,10,P1type,100)   #P1
P2 <- Player$new(10000,10,P2type,100)   #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(
market$price,
market$dprice,
P1$cash,
P1$value,
P1$asset,
P1$decision,
P2$cash,
P2$value,
P2$asset,
P2$decision
)
return(data)
}
Hedge_Hedge <- lapply(1:100, FUN = Playgame, P1type = "Hedge", P2type = "Hedge")
Price <- sapply(Hedge_Hedge, "[[", 1) %>%
data.frame() %>%
add_column(trial = 1:101) %>%
pivot_longer(-trial, names_to = "sim_times", values_to = "value")
g <- ggplot(Price, aes(x = trial, y = value, group = sim_times)) +
geom_line(color = "grey") +
theme_classic()
ggplotly(g)
