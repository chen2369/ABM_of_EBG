knitr::opts_chunk$set(echo = TRUE)
size_at_method1 = aov(paper~size, method1)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("tidyverse")
library(tidyverse)
dta = as.matrix(read.table("data2.txt",header=F))
paper = as.vector(dta)
size = gl(3,10)
method = rep(gl(2, 5), 3)
# 針對不同size取mean
tapply(paper,list(size,method),mean)
# dta <- read.table("data.txt",header=F)
# dta.long <- gather(dta, key = size, value = paper)
# dta.long$size <- recode(dta.long$size, `V1` = "1", `V2` = "2", `V3` = "3")
# group_by(dta.long, size)%>%
#   summarise(mean = mean(paper))
# Include interaction
aov.paper = aov(paper~size*method)
summary(aov.paper)
# Do not include interaction
aov.paper.non = aov(paper~size+method)
summary(aov.paper.non)
par(mfrow=c(1,2))
interaction.plot(size,method,paper)
interaction.plot(method,size,paper)
# Mean of interaction
tapply(paper,size:method,mean)
dtaF = data.frame(method,size,paper)
method1 = subset(dtaF, method =="1")
method2 = subset(dtaF, method =="2")
size_at_method1 = aov(paper~size, method1)
summary(size_at_method1)
size_at_method2 = aov(paper~size, method2)
summary(size_at_method2)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("tidyverse")
install.packages("ez")
library(ez)
# install.packages("tidyverse")
install.packages("ez")
# install.packages("tidyverse")
install.packages("ez")
library(ez)
# install.packages("tidyverse")
# install.packages("ez")
library(tidyverse)
ex14.1 <- read.table("Ex14-1.dat", sep = "\t", header = T)
head(ex14.1)
ex14.1$No <- as.factor(ex14.1$No)
ex14.1 <- read.table("Ex14-1.dat", sep = "\t", header = T)
head(ex14.1)
ex14.1$No <- as.factor(ex14.1$No)
ex14.1.long <- gather(ex14.1, key = group, value = score, -No)
str(ex14.1.long)
ex14.1.long
knitr::opts_chunk$set(echo = TRUE)
ex14.1 <- read.table("Ex14-1.dat", sep = "\t", header = T)
head(ex14.1)
ex14.1$No <- as.factor(ex14.1$No)
ex14.1.long <- gather(ex14.1, key = group, value = score, -No)
# install.packages("tidyverse")
# install.packages("ez")
library(tidyverse)
library(ez)
ex14.1 <- read.table("Ex14-1.dat", sep = "\t", header = T)
head(ex14.1)
ex14.1$No <- as.factor(ex14.1$No)
ex14.1.long <- gather(ex14.1, key = group, value = score, -No)
str(ex14.1.long)
ex14.1.long
ex14.1.long$Subject <- 1:nrow(ex14.1.long)
ezANOVA(ex14.1.long)
ezANOVA(ex14.1.long, wid = Subject, dv = score, between = group)
ezANOVA(ex14.1.rep, wid = No, dv = score, within = time)
ex14.1.rep <- gather(ex14.1, key = time, value = score, -No) #將資料變成長形
str(ex14.1.long)
ezANOVA(ex14.1.rep, wid = No, dv = score, within = time)
ezANOVA(ex14.1.rep, wid = No, dv = score, within = time, return_aov = T)
library(tidyverse)
library(R6)
sessionInfo()
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Herd",100)   #P1
source('class1.R', echo=TRUE)     # source
source('class1.R', echo=TRUE)     # source
source('class1.R', echo=TRUE)     # source
setwd("~/GitHub/ABM_of_EBG/script")
source('class1.R', echo=TRUE)     # source
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Herd",100)   #P1
P2 <- Player$new(10000,10,"Inversive",100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
P2$decision
P2$decision
P2$cash
#
P1$decision
source('class1.R', echo=TRUE)     # source
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
#
P1$decision
P2$cash
P2$decision
P1$cash
Market$price
P1$stock
P2$stock
#
a <- c(p1$cash, p2$cash)
#
a <- c(P1$cash, P2$cash)
a
#
a <- data.frame(P1$cash, P2$cash)
a
#
a <- data.frame(P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash))
a
#
a <- data.frame(P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash),names_to = c(P1,P2))
#
a <- data.frame(P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash),names_to = c(P1,P2))
#
a <- data.frame(P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash))
a
ggplot(a,aes(name,value)) +
geom_line(color = name)
ggplot(a,aes(name,value)) +
geom_line(color = "name")
ggplot(a,aes(name,value)) +
geom_line(fill = "name")
ggplot(a,aes(name,value)) +
geom_line()
#
a <- data.frame(sep(1:100),P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash))
#
a <- data.frame(rep(1:100),P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash))
#
a <- data.frame(rep(1:101),P1$cash, P2$cash) %>%
pivot_longer(cols = c(P1.cash,P2.cash))
a
ggplot(a,aes(rep.1.101.,value)) +
geom_line(color = "name")
ggplot(a,aes(rep.1.101.,value)) +
geom_line(fill = "name")
ggplot(a,aes(rep.1.101.,value)) +
geom_line(group = "name")
ggplot(a,aes(rep.1.101.,value)) +
geom_line(name = "P1.cash")
#
a <- data.frame(rep(1:101),P1$cash, P2$cash)
ggplot(a) +
geom_line(aes(rep.1.101.,P1$cash))
ggplot(a) +
geom_line(aes(rep.1.101.,P1$cash)) +
geom_line(aes(rep.1.101.,P2$cash))
ggplot(a) +
geom_line(aes(rep.1.101.,P1$cash), color = "red") +
geom_line(aes(rep.1.101.,P2$cash), color = "blue")
b <- cbind(P1,P2)
b
ggplot(asset) +
geom_line(aes(rep.1.101.,P1$asset), color = "red") +
geom_line(aes(rep.1.101.,P2$asset), color = "blue")
asset <- data.frame(rep(1:101),P1$asset, P2$asset)
ggplot(asset) +
geom_line(aes(rep.1.101.,P1$asset), color = "red") +
geom_line(aes(rep.1.101.,P2$asset), color = "blue")
